plugins {
    id("groovy")
    id("com.github.johnrengelman.shadow") version "7.1.1"
    id("io.micronaut.application") version "3.2.2"
    id('jacoco')
}

version = "0.1"
group = "com.example"

repositories {
    mavenCentral()
}

dependencies {
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-jackson-databind")
    implementation("io.micronaut.groovy:micronaut-runtime-groovy")
    implementation("jakarta.annotation:jakarta.annotation-api")
    compileOnly("io.micronaut:micronaut-http-validation")
    runtimeOnly("ch.qos.logback:logback-classic")
    implementation("io.micronaut:micronaut-validation")

}


application {
    mainClass.set("com.example.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("11")
    targetCompatibility = JavaVersion.toVersion("11")
}

graalvmNative.toolchainDetection = false
micronaut {
    runtime("netty")
    testRuntime("spock2")
    processing {
        incremental(true)
        annotations("com.example.*")
    }
}


check {
    dependsOn jacocoTestCoverageVerification
}
jacocoTestReport {
    dependsOn test

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir:it, excludes:[
                    '**/Application**'])
        }))
    }
}
jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                //minimum = 1.0//100%
                minimum = 1.0
            }
            excludes = ['**/Application**', 'com.example.Application']
        }


    }
}

//jacocoTestCoverageVerification {
//    violationRules {
//        rule {
//            limit {
//                minimum = 0.9
//            }
//            excludes = ['com.example.Application']
//        }
//    }
//}

